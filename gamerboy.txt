manage.py


#!/usr/bin/env python
"""Django's command-line utility for administrative tasks."""
import os
import sys


def main():
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'game.settings')
    try:
        from django.core.management import execute_from_command_line
    except ImportError as exc:
        raise ImportError(
            "Couldn't import Django. Are you sure it's installed and "
            "available on your PYTHONPATH environment variable? Did you "
            "forget to activate a virtual environment?"
        ) from exc
    execute_from_command_line(sys.argv)


if __name__ == '__main__':
    main()


settings.py


"""
Django settings for game project.

Generated by 'django-admin startproject' using Django 2.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
#SESSION_COOKIE_AGE = 6
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%8z8)ysh16!ygdpn=tp!#ja19)u1)438=t7jipstj&!f@t5m^^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['ravitejamerum.pythonanywhere.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'number'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'game.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'game.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
EMAIL_HOST ='smtp.gmail.com'
EMAIL_PORT=587
EMAIL_HOST_USER="Gamerboy456456@gmail.com"
EMAIL_HOST_PASSWORD=''
EMAIL_USE_TLS=True


urls.py



"""game URL Configuration

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/2.2/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.contrib import admin
from django.urls import path
from django import urls
from number import views
urlpatterns = [
    path('admin/', admin.site.urls),
    path('',views.playerlogins),
    path('puzzle/',views.puzzle,name='puzzle'),
    path('starts/',views.puzzlegame,name='pg'),
    path('results/<str:count>',views.output),
    path('chat/',views.chat),
    path('recovery/<str:player>',views.recovery),
    path('mail/',views.mailsending)
]



views.py


from django.shortcuts import render,redirect
from django.http import HttpResponse
from number.forms import *
from django.core.exceptions import ValidationError
from django.core.mail import send_mail, BadHeaderError,EmailMessage
def chat(request):
    form=chatbox()
    if request.method=='POST':
        form=chatbox(request.POST)
        if form.is_valid():
            cname=request.POST.get('chater',' ')
            cmail=request.POST.get('chatermail',' ')
            cmsg=request.POST.get('message',' ')
            request.session[cmail]=cname+"  "+cmsg
            From="Gamerboy456456@gmail.com"
            To=cmail
            Sub="Dear "+cname
            Message="Thank you "+cname+" we will get back to you within 24hrs."
            try:
               mail = EmailMessage(Sub,From,Message,[To])
               mail.send()
               comment="Thank you "+cname
               return render(request,'chat.html',{'commentar':comment})
            except:
                return redirect(playerlogins)
        else:
            return redirect(playerlogins)
def puzzle(request):
    import random
    a=str(random.randrange(999999999))
    b=[char for char in a]
    if len(b)==9:
             request.session['sample'] = b
             context={'one':b[0],'two':b[1],'three':b[2],'four':b[3],'five':b[4],'six':b[5],'seven':b[6],'eight':b[7],'nine':b[8]}
             return render(request,'home.html',context)
    elif True:
        return redirect(puzzle)
def output(request,count):
    context = {'score': str(count)}
    return render(request,'result.html', context)
def puzzlegame(request):
       form = AddNumbersForm()
       value = request.session['sample']
       if request.method == 'POST':
           count = 0
           if value[0]==request.POST.get('box1',' '):
               count+=1
           if value[1]==request.POST.get('box2',' '):
               count+= 1
           if value[2]==request.POST.get('box3',' '):
               count+=1
           if value[3]==request.POST.get('box4',' '):
               count+=1
           if value[4]==request.POST.get('box5',' '):
               count+=1
           if value[5]==request.POST.get('box6',' '):
               count+=1
           if value[6]==request.POST.get('box7',' '):
               count+=1
           if value[7]==request.POST.get('box8',' '):
               count+=1
           if value[8]==request.POST.get('box9',' '):
               count+=1
           duplicate_sname=request.session['player']
           if data.objects.filter(Enter_Name=duplicate_sname).exists():
               updates=data.objects.get(Enter_Name=duplicate_sname)
               if count>updates.Score:
                       updates.Score=count
                       updates.save()
               else:
                   return redirect(output, count)
           else:
                duplicate=data(Enter_Name=duplicate_sname,Score=count)
                duplicate.save()
           return redirect(output,count)
       return render(request,'table.html')
def mailsending(request):
    From="Gamerboy456456@gmail.com"
    play=request.session['player']
    record=data.objects.get(Enter_Name=play)
    To=record.Email_Address
    Sub="Dear "+play
    Message="Your Name and Security Code of gamer boy are: "+play+' ,'+record.Securitycode
    try:
               mail = EmailMessage(Sub,From,Message,[To])
               mail.send()
               return render(request,'mail.html',{'player':play})
    except:
                return HttpResponse("Oops something happen")
def recovery(request,player):
        another_name=player+", You have entered Wrong securitycode"
        return render(request,'recovery.html',{'another_name':another_name})
def playerlogins(request):
    form = login()
    if request.method == 'POST':
        form = login(request.POST)
        if form.is_valid():
            player = form.cleaned_data['Enter_Name']
            player=player.lower()
            code = form.cleaned_data['Securitycode']
            mail=form.cleaned_data['Email_Address']
            request.session['mail']=mail
            request.session['player']=player
            request.session['code']=code
            editableform= form.save(commit=False)
            if data.objects.filter(Enter_Name=player).exists() and data.objects.filter(Securitycode=code).exists():
                  return redirect(puzzle)
            if data.objects.filter(Enter_Name=player).exists():
                  return redirect(recovery,player)
            else:
                editableform.Enter_Name=player.lower()
                editableform.save()
                form.save_m2m()
                return redirect(puzzle)
        else:
            return redirect(playerlogins)
    else:
        another_name=0
        boarding=data.objects.all().order_by('-Score')[:13]
        return render(request,'Demo.html', {'form': form,'boarding':boarding,'another_name':another_name})



models.py


from django.db import models
class data(models.Model):
    Enter_Name=models.CharField(max_length=20)
    Securitycode=models.CharField(max_length=20)
    Score=models.IntegerField(default=0)
    Email_Address=models.EmailField()

forms.py


from django import forms
from .models import *
class AddNumbersForm(forms.Form):
    box1=forms.IntegerField()
    box2=forms.IntegerField()
    box3=forms.IntegerField()
    box4=forms.IntegerField()
    box5=forms.IntegerField()
    box6=forms.IntegerField()
    box7=forms.IntegerField()
    box8=forms.IntegerField()
    box9=forms.IntegerField()
class login(forms.ModelForm):
    class Meta:
          model=data
          fields=['Enter_Name','Securitycode','Email_Address']
          widgets = {
           'Securitycode':forms.PasswordInput(attrs={'class':'form-control', 'placeholder':'Securitycode'}),
           "Enter_Name":forms.TextInput(attrs={'class':'form-control', 'placeholder':'Enter your name'}),
           "Email_Address":forms.EmailInput(attrs={'class':'form-control', 'placeholder':'Enter your email address'}),
           }
class chatbox(forms.Form):
    chater=forms.CharField()
    chatermail=forms.EmailField()
    message=forms.CharField()


admin.py

from django.contrib import admin
from .models import *
# Register your models here.
from django.contrib.sessions.models import Session
class SessionAdmin(admin.ModelAdmin):
    def _session_data(self, obj):
        return obj.get_decoded()
    list_display = ['session_key', '_session_data', 'expire_date']
admin.site.register(Session, SessionAdmin)
admin.site.register(data)


demo.html



<!DOCTYPE html>
<html>
<head>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <style>
        bo {font-family: Arial, Helvetica, sans-serif;}
        * {box-sizing: border-box;}
        
        /* Button used to open the chat form - fixed at the bottom of the page */
        .open-button {
          background-color: #555;
          color: white;
          padding: 16px 20px;
          border: none;
          cursor: pointer;
          opacity: 0.8;
          position: fixed;
          bottom: 23px;
          right: 28px;
          width: 280px;
        }
        
        /* The popup chat - hidden by default */
        .chat-popup {
          display: none;
          position: fixed;
          bottom: 0;
          right: 15px;
          border: 3px solid #f1f1f1;
          z-index: 9;
        }
        
        /* Add styles to the form container */
        .form-container {
          max-width: 300px;
          padding: 10px;
          background-color: white;
        }
        
        /* Full-width textarea */
        .form-container textarea {
          width: 100%;
          padding: 15px;
          margin: 5px 0 22px 0;
          border: none;
          background: #f1f1f1;
          resize: none;
          min-height: 100px;
        }
        
        /* When the textarea gets focus, do something */
        .form-container textarea:focus {
          background-color: #ddd;
          outline: none;
        }
        
        /* Set a style for the submit/send button */
        .form-container .btn {
          background-color: #4CAF50;
          color: white;
          padding: 16px 20px;
          border: none;
          cursor: pointer;
          width: 100%;
          margin-bottom:10px;
          opacity: 0.8;
        }
        
        /* Add a red background color to the cancel button */
        .form-container .cancel {
          background-color: red;
        }
        
        /* Add some hover effects to buttons */
        .form-container .btn:hover, .open-button:hover {
          opacity: 1;
        }

* {
  box-sizing: border-box;
}

.column {
  float: left;
  width: 33.33%;
  padding: 10px;
  height: 600px; 
}

</style>
</head>
<body onload="fn_focus()">
    <script type="text/javascript">
        function preventBack() { window.history.forward(); }
        
        setTimeout("preventBack()", 0);
        window.onunload = function () { null };
    </script>
<h2 align="center" style="background-color:rgb(203, 174, 212);">Gamer Boy</h2>

<div class="row">
        <div align="center" class="column" style="background-color:rgb(95, 158, 87);">
                <h3>How To Play</h3>
                <hr/>
            <p><b>Step-1:</b><i>At first you have to Login with your credentials.</i></p>
            <p><b>Step-2:</b><i>After Login you will go to another page. In that Page there will be a table which contains some certain numbers you have to remember all the numbers within span of seconds.</i></p>
            <p><b>Step-3:</b><i>And then that page will autometically redirected to another page, in that page there will be table which is empty you have to give the numbers as you see in the previous page.</i></p>
            <p><b>Step-4:</b><i>While you login by the second time you would be able to give any email-id, but the first email will take as yours.</i></p>
            <p><b>Step-5:</b><i>If you have any queries click on the Query button and give the credientials there. After sending the then it will go to another page, if the mail is not valid it will be in that page only </i>
            <p><b>Step-6:</b><i>The Score will be generated by the matched numbers.</i></p>  
              </div>

  <div align="center" class="column" style="background-color:rgb(82, 108, 190);">
      <h3>Login Here</h3>
      <hr/>
      <form method="POST">
              {% csrf_token %}
              {{ form.as_p }}
              <input type="submit" value="Login">
      </form>
  </div>

  <div class="column" style="background-color:#ccc;">
      <div align="center"><h3>Leader Board</h3></div>
      <hr/>
      <div align="center">
          <marquee hspace="150%" height="500" direction="down">
           {%for j in boarding%}
                <h4 style="color:red"><i>{{j.Enter_Name}}</i>--{{j.Score}}</h4>
           {%endfor%}
          </marquee>
     </div>
  </div>
</div>
<bo>

        <button class="open-button" onclick="openForm()">Query</button>
        
        <div class="chat-popup" id="myForm">
          <form action="/chat/" class="form-container" method="POST">
            {% csrf_token %}
            <input type='text' placeholder="Type name.." name="chater" required><br>
            <input type='text' placeholder="Type email.." name="chatermail" required>
            <textarea placeholder="Type message.." name="message" required></textarea>
            <input type="submit" class="btn" value="Send">
            <button type="button" class="btn cancel" onclick="closeForm()">Close</button>
          </form>
        </div>
        
        <script>
        function openForm() {
          document.getElementById("myForm").style.display = "block";
        }
        
        function closeForm() {
          document.getElementById("myForm").style.display = "none";
        }
        </script>
        
        </bo>

</body>
</html>


chat.html

{{commentar}}
<a href='/'><h4 align='center'>Home</h4></a>

home.html

<!DOCTYPE html>
<html>
<head>
<style>
table {
  font-family: arial, sans-serif;
  border-collapse: collapse;
  width: 30%;
  height: 50%;
}

td, th {
  border: 1px solid #dddddd;
  text-align: center;
  padding: 20px;
}

.firstRow{
  background-color: #e6e6ff;
}
.secondRow{
  background-color: #00e6e6;
}
.thirdRow{
  background-color: #ffe6e6;
}
</style>
</head>
<body>
<script type="text/javascript">
  function pageRedirect() {
    window.location.replace("{% url 'pg' %}");
  }

  setTimeout("pageRedirect()", 1000);
</script>

<h2 align="center">Remember these Number, You are going to play game</h2>

<table align="center">
  <tr class="firstRow">
    <td height="20%">{{one}}</td>
    <td height="20%">{{two}}</td>
    <td height="20%">{{three}}</td>
  </tr>
  <tr class="secondRow">
    <td height="20%">{{four}}</td>
    <td height="20%">{{five}}</td>
    <td height="20%">{{six}}</td>
  </tr>
  <tr class="thirdRow">
    <td height="20%">{{seven}}</td>
    <td height="20%">{{eight}}</td>
    <td height="20%">{{nine}}</td>
  </tr>
</table>
<a href="{% url 'puzzle' %}"><h4 align='center'>Try Again</h4></a>
</body>
</html>


mail.html

<body>
        <script type="text/javascript">
            function preventBack() { window.history.forward(); }
            
            setTimeout("preventBack()", 0);
            window.onunload = function () { null };
        </script>
Password sent to your email address<br>
<a href='/'><h4 align='left'>Home</h4></a><br>

</body>

playerlogin.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<body>
        <script type="text/javascript">
            function preventBack() { window.history.forward(); }
            
            setTimeout("preventBack()", 0);
            window.onunload = function () { null };
        </script>
<title>Login For Players</title>

<form method="POST">
          {% csrf_token %}

          {{ form.as_table }}
          <input type="submit" value="submit">
{%for j in boarding%}
    {{j.Name}}<br>
{%endfor%}
</form>

</body>
</html>

recovery.html

<body>
        <script type="text/javascript">
            function preventBack() { window.history.forward(); }
            
            setTimeout("preventBack()", 0);
            window.onunload = function () { null };
        </script>

{{another_name}}
<a href='/'><h4 align='left'>Try Again</h4></a>
<a href='/mail'><h4 align='left'>Forget Password</h4></a>
</body>

result.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<body>
        <script type="text/javascript">
            function preventBack() { window.history.forward(); }
            
            setTimeout("preventBack()", 0);
            window.onunload = function () { null };
        </script>
<h4 align='center'>Your score is {{score}}</h4>
<a href="{% url 'puzzle' %}"><h4 align='center'>Try Another One</h4></a>
<a href='/'><h4 align='center'>Logout</h4></a>
</body>
</html>

table.html

<html>
<head>
    
    <style>
        table {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            width: 30%;
            height: 50%;
        }

        td, th{
            border: 1px solid;
            text-align: center;
            padding: 20px;
        }

        input{
            text-align: center;
            padding: 20px;
        }
    </style>
    
</head>
<script>

    function myfunction(e,nameValue){
        if (((e.keyCode>= 48 || e.which>=48)&& (e.keyCode<=57 ||e.which<=57))  || ((e.keyCode>= 97 || e.which>=97)&& (e.keyCode<=105 ||e.which<=105))){
            document.getElementsByName("box"+nameValue)[0].focus();
        }
    }


    function fn_focus(){
        document.getElementsByName("box1")[0].focus();
    }
</script>
<body onload="fn_focus()" style="background-color:rgb(95, 196, 191);">
    <!-- <script type="text/javascript">
        function pageRedirect() {
          window.location.replace("http://127.0.0.1:8000/results/+id+/");
        }
      
        setTimeout("pageRedirect()", 10000);
      </script> -->
      <!-- <script type="text/javascript">

        function pageRedirect() {
    
          window.location.href = "http://127.0.0.1:8000/results/+id+/";
    
        }      
    
    </script>  -->
    <script type="text/javascript">
        function preventBack() { window.history.forward(); }
        
        setTimeout("preventBack()", 0);
        window.onunload = function () { null };
    </script>
<center><h1>Enter Remembered Numbers in same Order</h1></center><hr>
<div class="container" align="center">
<form method="POST">
{% csrf_token %}
    <table>
        <tr>
            <td><input type="text" name="box1" size="1" maxlength="1" onkeyup="myfunction(event,2)"></td>
            <td><input type="text" name="box2" size="1" maxlength="1" onkeyup="myfunction(event,3)"></td>
            <td><input type="text" name="box3" size="1" maxlength="1" onkeyup="myfunction(event,4)"></td>
        </tr>
        <tr>
            <td><input type="text" name="box4" size="1" maxlength="1" onkeyup="myfunction(event,5)"></td>
            <td><input type="text" name="box5" size="1" maxlength="1" onkeyup="myfunction(event,6)"></td>
            <td><input type="text" name="box6" size="1" maxlength="1" onkeyup="myfunction(event,7)"></td>
        </tr>
        <tr>
            <td><input type="text" name="box7" size="1" maxlength="1" onkeyup="myfunction(event,8)">
            <td><input type="text" name="box8" size="1" maxlength="1" onkeyup="myfunction(event,9)"></td>
            <td><input type="text" name="box9" size="1" maxlength="1"></td>
        </tr>
    </table><br><br>
<input type="submit" submit="Done" value="SUBMIT">
</form>
</div>
<a href="{% url 'puzzle' %}"><h4 align='center'>Try Another One</h4></a>
</body>
</html>
